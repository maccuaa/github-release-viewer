{"version":3,"sources":["Components/Copyright.tsx","Components/Footer.tsx","GitHubIcon.tsx","Components/Header.tsx","lib/releases.ts","Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","marginTop","Footer","classes","className","GitHubIcon","props","SvgIcon","d","icon","marginRight","Header","AppBar","position","Toolbar","viewBox","noWrap","octokit","Octokit","GH_REGEX","RegExp","PAGE_REGEX","validGitHubRepoURL","value","test","getReleases","owner","repo","progress","a","page","results","repos","listReleases","per_page","pageResult","push","data","link","headers","split","last","pageParts","exec","console","log","numPages","Number","rateLimitRemaining","rateLimit","rateLimitReset","root","display","flexDirection","minHeight","heroContent","cardGrid","paddingTop","paddingBottom","Home","React","useState","releases","setReleases","loading","setLoading","setProgress","rateRemaining","setRateRemaining","rateReset","setRateReset","setRateLimit","onProgress","completed","total","remaining","limit","resetDate","onSearch","url","urlParts","length","error","message","selectSearch","event","target","select","Container","maxWidth","onSubmit","initialValues","handleSubmit","valid","name","fullWidth","placeholder","fieldProps","validate","onClick","InputProps","startAdornment","InputAdornment","endAdornment","IconButton","Grid","container","direction","justify","item","format","LinearProgress","undefined","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","release","key","id","html_url","rel","tag_name","formatDistanceToNow","published_at","App","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c1e32d9c.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nexport const Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Andrew MacCuaig\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nexport default Copyright;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Copyright from \"./Copyright\";\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n  },\n}));\n\nexport const Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Copyright />\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport SvgIcon, { SvgIconProps } from \"@material-ui/core/SvgIcon\";\n\nexport const GitHubIcon = (props: SvgIconProps) => (\n  <SvgIcon {...props}>\n    <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path>\n  </SvgIcon>\n);\n\nexport default GitHubIcon;\n","import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport GitHubIcon from \"../GitHubIcon\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport const Header = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"relative\">\n      <Toolbar>\n        <GitHubIcon className={classes.icon} viewBox=\"0 0 16 16\" />\n        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n          GitHub Release Viewer\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import { Octokit } from \"@octokit/rest\";\nimport { Endpoints } from \"@octokit/types\";\n\nexport type ReposListReleasesResponseData = Endpoints[\"GET /repos/:owner/:repo/releases\"][\"response\"][\"data\"][0];\n\nconst octokit = new Octokit();\n\nexport const GH_REGEX = new RegExp(\"(?:https?://)?github.com/([A-z0-9-_]+)/([A-z0-9-_]+)/?\");\n\nconst PAGE_REGEX = /&page=(\\d+)/;\n\nexport const validGitHubRepoURL = (value: string) => {\n  const valid = GH_REGEX.test(value);\n\n  if (!valid) {\n    return \"Please enter a valid GitHub URL\";\n  }\n};\n\nexport const getReleases = async (\n  owner: string,\n  repo: string,\n  progress: (completed: number, total: number, remaining: number, limit: number, reset: number) => void\n) => {\n  let page = 1;\n\n  const results: ReposListReleasesResponseData[] = [];\n\n  const pageResult = await octokit.repos.listReleases({ owner, repo, per_page: 100, page: 1 });\n\n  results.push(...pageResult.data);\n\n  const link = pageResult.headers.link;\n\n  if (!link) {\n    return results;\n  }\n\n  const [, last] = link.split(\",\");\n\n  const pageParts = PAGE_REGEX.exec(last);\n\n  if (pageParts === null) {\n    console.log(\"Unable to extract last page # from\", last);\n    return results;\n  }\n\n  const numPages = Number(pageParts[1]);\n\n  while (page < numPages) {\n    page++;\n\n    const pageResult = await octokit.repos.listReleases({ owner, repo, per_page: 100, page });\n\n    results.push(...pageResult.data);\n\n    const rateLimitRemaining = pageResult.headers[\"x-ratelimit-remaining\"] ?? 0;\n    const rateLimit = pageResult.headers[\"x-ratelimit-limit\"] ?? 0;\n    const rateLimitReset = pageResult.headers[\"x-ratelimit-reset\"] ?? 0;\n\n    progress(page, numPages, Number(rateLimitRemaining), Number(rateLimit), Number(rateLimitReset));\n\n    if (rateLimitRemaining === 0) {\n      return results;\n    }\n  }\n\n  return results;\n};\n","import React from \"react\";\n\n// Local Imports\n// ====================================================\nimport Footer from \"./Components/Footer\";\nimport Header from \"./Components/Header\";\n\n// Material-UI Imports\n// ====================================================\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Container from \"@material-ui/core/Container\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport Link from \"@material-ui/core/Link\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Typography from \"@material-ui/core/Typography\";\n\n// Other Imports\n// ====================================================\nimport { Form } from \"react-final-form\";\nimport { formatDistanceToNow, format } from \"date-fns\";\nimport { GH_REGEX, ReposListReleasesResponseData, getReleases, validGitHubRepoURL } from \"./lib/releases\";\nimport { TextField } from \"mui-rff\";\n\ninterface FormValues {\n  url: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n  },\n}));\n\nexport const Home = () => {\n  const classes = useStyles();\n\n  const [releases, setReleases] = React.useState<ReposListReleasesResponseData[] | null>(null);\n  const [loading, setLoading] = React.useState(false);\n  const [progress, setProgress] = React.useState<number | null>(null);\n  const [rateRemaining, setRateRemaining] = React.useState<number | null>(null);\n  const [rateReset, setRateReset] = React.useState<number | null>(null);\n  const [rateLimit, setRateLimit] = React.useState<number | null>(null);\n\n  const onProgress = (completed: number, total: number, remaining: number, limit: number, resetDate: number) => {\n    const progress = (completed * 100) / total;\n    setProgress(progress);\n    setRateRemaining(remaining);\n    setRateLimit(limit);\n    setRateReset(resetDate);\n  };\n\n  const onSearch = async ({ url }: FormValues) => {\n    const urlParts = GH_REGEX.exec(url);\n\n    if (urlParts === null) {\n      console.log(\"Unable to extract any results from\", url);\n      return;\n    }\n\n    if (urlParts.length < 3) {\n      console.log(\"Unable to extract the right number of results from\", url);\n      return;\n    }\n\n    const owner = urlParts[1];\n    const repo = urlParts[2];\n\n    setLoading(true);\n\n    console.log(\"Fetching releases for\", owner, repo);\n\n    try {\n      const releases = await getReleases(owner, repo, onProgress);\n      setReleases(releases);\n    } catch (e) {\n      console.error(e.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const selectSearch = (event: React.MouseEvent<HTMLInputElement>) => {\n    const input = event.target as HTMLInputElement;\n    input.select();\n  };\n\n  console.log(rateLimit);\n\n  return (\n    <div className={classes.root}>\n      <Header />\n\n      {/* Page Body */}\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            {/* <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Enter the GitHub repo:\n            </Typography> */}\n            <Form\n              onSubmit={onSearch}\n              initialValues={{\n                url: \"https://github.com/mui-org/material-ui\",\n              }}\n            >\n              {({ handleSubmit, valid }) => (\n                <form onSubmit={handleSubmit}>\n                  <TextField\n                    name=\"url\"\n                    fullWidth\n                    variant=\"outlined\"\n                    placeholder=\"https://github.com/mui-org/material-ui\"\n                    fieldProps={{\n                      validate: validGitHubRepoURL,\n                    }}\n                    onClick={selectSearch}\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\">\n                          <SearchIcon />\n                        </InputAdornment>\n                      ),\n                      endAdornment: valid && (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={handleSubmit}>Go</IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                </form>\n              )}\n            </Form>\n            <Grid container direction=\"row\" justify=\"space-between\">\n              <Grid item>\n                {rateRemaining !== null && <Typography variant=\"caption\">Rate Remaining: {rateRemaining}</Typography>}\n              </Grid>\n              <Grid item>\n                {rateReset !== null && (\n                  <Typography variant=\"caption\">\n                    Rate Reset: {format(new Date(rateReset * 1000), \"HH:mm:ss\")}\n                  </Typography>\n                )}\n              </Grid>\n            </Grid>\n          </Container>\n        </div>\n\n        {loading && (\n          <LinearProgress\n            variant={progress === null ? \"indeterminate\" : \"determinate\"}\n            value={progress === null ? undefined : progress}\n          />\n        )}\n\n        {/* Results */}\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            <TableContainer component={Paper}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Release Name</TableCell>\n                    <TableCell>Date Published</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {releases?.map((release) => (\n                    <TableRow key={release.id}>\n                      <TableCell>\n                        <Link href={release.html_url} target=\"_blank\" rel=\"noopener\">\n                          {release.name || release.tag_name}\n                        </Link>\n                      </TableCell>\n                      <TableCell>{`${formatDistanceToNow(new Date(release.published_at))} ago`}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n        </Container>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Home />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}